---
  - name: install base packages
    hosts: localhost
    connection: local
    vars_files: ./vars.yaml
    become: yes
    tasks:
      - name: update apt repo for latest git version
        apt_repository:
          repo: 'ppa:git-core/ppa'
      - name: install base packages
        apt:
          name: unzip, ruby, jq, openjdk-17-jre-headless, maven
          state: present
          update_cache: yes
      - name: install ruby gems
        community.general.gem:
          name: jwt
          state: present
          #testing
  - name: Configure git for local user
    hosts: localhost
    connection: local
    vars_files: ./vars.yaml
    become_user: "{{ ubuntu.username }}"
    tasks:
      - git_config:
          name: user.email
          scope: global
          value: "{{ git.email }}"
      - git_config:
          name: user.name
          scope: global
          value: "{{ git.username }}"
  - name: Install OC CLI
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: get oc cli
        get_url:
          url: https://mirror.openshift.com/pub/openshift-v4/amd64/clients/ocp/latest/openshift-client-linux.tar.gz
          dest: ~/occli.tar.gz
          force: yes
      - name: extract oc and kubectl cli
        unarchive:
          src: ~/occli.tar.gz
          dest: /usr/bin/
          remote_src: True
  - name: Install AZ CLI
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: remove the default ubuntu version of the azure cli
        apt:
          name: azure-cli
          state: absent
          autoremove: yes
      - name: install microsoft gpg key
        ansible.builtin.apt_key:
          state: present
          url: https://packages.microsoft.com/keys/microsoft.asc
      - name: install azure-cli apt repository
        apt_repository:
          repo: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_distribution_release }} main"
          state: present
      - name: Ensure install azure cli dependencies are installed
        apt:
          name: apt-transport-https, gnupg, python3-pip
          state: "{{ azurecli.dependenciesstate }}"
          update_cache: yes
      - name: install azure cli
        apt:
          name: azure-cli
          state: "{{ azurecli.clistate }}"
          update_cache: yes
  - name: Install AWS CLI
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: remove aws cli
        apt:
          name: awscli 
          state: absent
          autoremove: yes
      - name: download the aws cli package
        get_url:
          url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
          dest: ~/awscli.zip
          force: yes
      - name: unzip the archive
        unarchive:
          src: ~/awscli.zip
          dest: /tmp/
          remote_src: True
      - name: run the aws installer script
        ansible.builtin.shell: /tmp/aws/install --update && hash aws
  - name: Install Terraform and Packer CLI
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: install hashicorp gpg key
        ansible.builtin.apt_key:
          state: present
          url: https://apt.releases.hashicorp.com/gpg
      - name: install terraform apt repository
        apt_repository:
          repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
          state: present
      - name: install terraform and packer cli
        apt:
          name: terraform,packer
          state: "{{ hashicorp.clistate }}"
          update_cache: yes
  - name: Install podman
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: remove the default ubuntu version of podman
        apt:
          name: podman
          state: absent
          autoremove: yes
      - name: install kubic gpg key
        ansible.builtin.apt_key:
          state: present
          url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/Release.key
      - name: install kubic apt repository
        apt_repository:
          repo: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/ /"
          state: present
      - name: install kubic podman
        apt:
          name: podman
          state: "{{ podman.clistate }}"
          update_cache: yes
      - name: create symlink for docker
        file:
          src: /usr/bin/podman
          dest: /usr/bin/docker
          owner: root
          group: root
          state: link
  - name: update and upgrade all apt packages
    hosts: localhost
    connection: local
    become: yes
    vars_files: ./vars.yaml
    tasks:
      - name: update
        apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      - name: upgrade
        apt: upgrade=yes
